name: test
run-name: ${{ github.workflow }} - ${{ github.sha }}
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:
  ffvvc-test:
    name: ffvvc-test / ${{ matrix.os.name }}/${{ matrix.compiler.name }}/${{ matrix.assembler.name }}
    env:
      runner_threads: 4
      configure_flags: --enable-ffmpeg --disable-everything --enable-decoder=vvc --enable-parser=vvc --enable-demuxer=vvc --enable-protocol=file,pipe --enable-encoder=rawvideo --enable-muxer=rawvideo,md5
    strategy:
      fail-fast: false
      matrix:
        os: 
          - { name: linux, runner: ubuntu-latest, shell: bash }
          - { name: windows, runner: windows-latest, shell: 'msys2 {0}' }
        compiler: 
          - { name: gcc, flags: --cc=gcc }
          - { name: clang, flags: --cc=clang }
          - { name: msvc, flags: --toolchain=msvc }
        assembler: 
          - { name: no asm, flags: --disable-asm }
          - { name: yasm, flags: --as=yasm }
          - { name: nasm, flags: --as=nasm }
        exclude:
          - os: { name: linux, runner: ubuntu-latest, shell: bash }
            compiler: { name: msvc, flags: --toolchain=msvc }
          - os: { name: linux, runner: ubuntu-latest, shell: bash }
            assembler: { name: yasm, flags: --as=yasm }
          - os: { name: linux, runner: ubuntu-latest, shell: bash }
            assembler: { name: nasm, flags: --as=nasm }
          - os: { name: windows, runner: windows-latest, shell: 'msys2 {0}' }
            compiler: { name: gcc, flags: --cc=gcc }
          - os: { name: windows, runner: windows-latest, shell: 'msys2 {0}' }
            compiler: { name: clang, flags: --cc=clang }

    runs-on: ${{ matrix.os.runner }}
    defaults:
      run:
        shell: ${{ matrix.os.shell }}

    steps:
    - name: Get MSVC
      if: ${{ matrix.compiler.name == 'msvc' && matrix.os.name == 'windows' }}
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set up MSYS2
      if: ${{ matrix.os.shell == 'msys2 {0}' }}
      uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: UCRT64
        path-type: inherit
        install: >-
          make
          diffutils

    - name: Get assembler
      if: ${{ matrix.os.shell == 'msys2 {0}' && matrix.assembler.name != 'no asm' }}
      run: pacman --noconfirm -S ${{ matrix.assembler.name }}

    - name: Get source
      uses: actions/checkout@v3
      with:
        path: FFmpeg

    - name: Configure
      run: cd FFmpeg && ./configure ${{ matrix.compiler.flags }} ${{ matrix.assembler.flags }} ${{ env.configure_flags }} || (tail ffbuild/config.log; false)

    - name: Build
      run: cd FFmpeg && make -j

    - name: Get tests
      uses: actions/checkout@v3 
      with:
        repository: ffvvc/tests
        path: tests

    - name: Unit test
      run: python3 tests/tools/ffmpeg.py --threads ${{ env.runner_threads }} --ffmpeg-path=./FFmpeg/ffmpeg tests/conformance/passed

    - name: Negative test
      run: python3 tests/tools/ffmpeg.py --threads ${{ env.runner_threads }} --ffmpeg-path=./FFmpeg/ffmpeg tests/conformance/failed || true

  checkasm:
    name: checkasm / windows/${{ matrix.compiler.name }}/${{ matrix.assembler.name }}
    env:
      configure_flags: --disable-everything --enable-decoder=vvc --enable-parser=vvc --enable-demuxer=vvc
    strategy:
      fail-fast: false
      matrix:
        compiler: 
          - { name: msvc, flags: --toolchain=msvc }
        assembler:
          - { name: yasm, flags: --as=yasm }
          - { name: nasm, flags: --as=nasm }

    # Assembly tests are run on Windows as the Linux runner does not support AVX512
    # See #48
    runs-on: windows-latest
    defaults:
      run:
        shell: 'msys2 {0}'

    steps:
    - name: Get MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: UCRT64
        path-type: inherit
        install: >-
          make
          diffutils
          ${{ matrix.assembler.name }}

    - name: Get source
      uses: actions/checkout@v3

    - name: Configure
      run: ./configure ${{ matrix.compiler.flags }} ${{ matrix.assembler.flags }} ${{ env.configure_flags }} || (tail ffbuild/config.log; false)

    - name: Build
      run: make -j checkasm

    - name: Run tests
      run: ./tests/checkasm/checkasm
